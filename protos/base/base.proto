syntax = "proto3";

package base;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/descriptor.proto";
import "gorm/gorm.proto";

option go_package = "github.com/RahkarSanat/kiz-go-gen-deps/gen/protos/base";

option (gorm.file_opts).force = true;

extend google.protobuf.FileOptions {
  CustomFileOptions fileOps = 10001;
  MinioOption minio = 10002;
}

message CountRequest {
  optional Filter filter = 1;
}

message FindRequest {
  optional Filter filter = 1;
}

message FindByIdArchiveRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  int32 version = 2;
  optional Filter filter = 3;
  repeated Query queries = 4;
}

message FindByIdArchiveResponse {
  option (gorm.opts) = {
    ormable: true
    // table: "abrso.gps_v2_evt_table"
  };
  string id = 1;
  string owner = 2 [(gorm.field).tag = {not_null: true}];
  repeated string clients = 3 [(gorm.field).tag = {not_null: true}];
  repeated string zones = 4 [(gorm.field).tag = {not_null: true}];
  repeated string relations = 5 [(gorm.field).tag = {not_null: true}];
  repeated string shares = 6 [(gorm.field).tag = {not_null: true}];
  optional string created_by = 7;
  optional uint64 created_at = 8 [(gorm.field).tag = {type: "DateTime"}];
  optional string created_in = 9;
  int32 version = 10 [(gorm.field).tag = {not_null: true}];
  optional uint64 updated_at = 11 [(gorm.field).tag = {type: "DateTime"}];
  optional string updated_in = 12;
  optional string updated_by = 13;
  repeated string tags = 14 [(gorm.field).tag = {not_null: true}];
  bytes data =20 [(gorm.field).tag = {not_null: true}];
}


message FindByIDRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  optional Filter filter = 2;
}

message CustomFileOptions {
  bool ignore = 1;
  string db_name = 2;
}

message MongoOption {
  string mongoType = 1;
  string bsonTag = 2;
}

message AggregateOption {
  bool is_aggregate = 1;
  string aggregate = 2;
}

message ViewOption {
  bool is_view = 1;
  repeated string names = 2;
}

extend google.protobuf.FieldOptions {
  MongoOption mongoType = 10001;
}

extend google.protobuf.MessageOptions {
  MongoMessageOptions mongoOpts = 52120;
}

message MongoMessageOptions {
  bool should_validate = 1;
}

message MinioOption {
  bool ignore = 1;
}

extend google.protobuf.MethodOptions {
  AclOption acl = 10001;
  AggregateOption agropt = 10002;
  ViewOption view = 10003;
}

message AclOption {
  string Sub = 1;
  string Obj = 2;
  string Act = 3;
}

message Sort {
  optional string key = 1;
  optional int32 value = 2;
}

message Pagination {
  optional int32 limit = 1;
  optional int64 skip = 2;
  repeated Sort sort = 3;
}

message Query {
  option (gorm.opts) = {ormable: false};
  string Key = 1;
  string Value = 2;
  string Op = 3;
  string Func = 4;
}


message Filter {
  optional Pagination pagination = 1;
  optional string projection = 2;
  optional string query = 3;
  optional bool exclude_own = 4;
  optional bool exclude_zone = 5;
  optional bool exclude_share = 6;
  optional bool exclude_relation = 7;
  optional bool is_trash = 8;
}

message Operations {
  optional string addToSet = 1;
  optional string bit = 2;
  optional string currentDate = 3;
  optional string inc = 4;
  optional string max = 5;
  optional string min = 6;
  optional string mul = 7;
  optional string pop = 8;
  optional string pull = 9;
  optional string pullAll = 10;
  optional string push = 11;
  optional string rename = 12;
  optional string set = 13;
  optional string setOnInsert = 14;
  optional string unset = 15;
}

message Total {
  optional int64 count = 1;
}

enum Status {
  STATUS_UNSPECIFIED = 0;
  STATUS_PENDING = 1;
  STATUS_APPROAVED = 2;
  STATUS_CANCELED = 3;
  STATUS_REJECT = 4;
  STATUS_EXPIRED = 5;
  STATUS_DISABLED = 6;
}

message BaseAccess {
  option (gorm.opts) = {ormable: true};
  string id = 10 [(gorm.field).tag = {
    type: "UUID"
    primary_key: true
  }];
  string owner = 1 [(google.api.field_behavior) = REQUIRED];
  repeated string zones = 2;
  repeated string clients = 3 [(google.api.field_behavior) = REQUIRED];
  repeated string shares = 4;
  repeated string relations = 5;
  optional string created_by = 6 [(base.mongoType).mongoType = "ObjectID"];
  optional string updated_by = 7 [(base.mongoType).mongoType = "ObjectID"];
  optional string deleted_by = 8 [(base.mongoType).mongoType = "ObjectID"];
  optional string restored_by = 9 [(base.mongoType).mongoType = "ObjectID"];
}

message BaseProperties {
  option (gorm.opts) = {ormable: true};
  string id = 10 [(gorm.field).tag = {
    type: "UUID"
    primary_key: true
  }];
  optional string created_in = 1 [(base.mongoType).mongoType = "ObjectID"];
  optional string updated_in = 2 [(base.mongoType).mongoType = "ObjectID"];
  optional string deleted_in = 3 [(base.mongoType).mongoType = "ObjectID"];
  optional string restored_in = 4 [(base.mongoType).mongoType = "ObjectID"];
  repeated string tags = 5;
  optional int32 version = 6;
}

message BaseDates {
  option (gorm.opts) = {ormable: true};
  string id = 10 [(gorm.field).tag = {
    type: "UUID"
    primary_key: true
  }];
  optional string created_at = 1 [
    (base.mongoType).mongoType = "Datetime",
    (gorm.field).tag = {type: "DateTime"}
  ];
  optional string updated_at = 2 [
    (base.mongoType).mongoType = "Datetime",
    (gorm.field).tag = {type: "DateTime"}
  ];
  optional string deleted_at = 3 [
    (base.mongoType).mongoType = "Datetime",
    (gorm.field).tag = {type: "DateTime"}
  ];
  optional string restored_at = 4 [
    (base.mongoType).mongoType = "Datetime",
    (gorm.field).tag = {type: "DateTime"}
  ];
}

message BaseAccessUpdate {
  optional string owner = 1;
  repeated string zones = 2;
  repeated string shares = 3;
  repeated string relations = 4;
}

message BasePropertiesUpdate {
  repeated string tags = 1;
}

message BaseDatesUpdate {}

message BaseAccessRead {
  optional string owner = 1;
  repeated string zones = 2;
  repeated string clients = 3;
  repeated string shares = 4;
  repeated string relations = 5;
  optional string created_by = 6 [(base.mongoType).mongoType = "ObjectID"];
  optional string updated_by = 7 [(base.mongoType).mongoType = "ObjectID"];
  optional string deleted_by = 8 [(base.mongoType).mongoType = "ObjectID"];
  optional string restored_by = 9 [(base.mongoType).mongoType = "ObjectID"];
}

message BasePropertiesRead {
  optional string created_in = 1 [(base.mongoType).mongoType = "ObjectID"];
  optional string updated_in = 2 [(base.mongoType).mongoType = "ObjectID"];
  optional string deleted_in = 3 [(base.mongoType).mongoType = "ObjectID"];
  optional string restored_in = 4 [(base.mongoType).mongoType = "ObjectID"];
  repeated string tags = 5;
  optional int32 version = 6;
}

message BaseDatesRead {
  optional string created_at = 1 [
    (base.mongoType).mongoType = "Datetime",
    (gorm.field).tag = {type: "DateTime"}
  ];
  optional string updated_at = 2 [
    (base.mongoType).mongoType = "Datetime",
    (gorm.field).tag = {type: "DateTime"}
  ];
  optional string deleted_at = 3 [
    (base.mongoType).mongoType = "Datetime",
    (gorm.field).tag = {type: "DateTime"}
  ];
  optional string restored_at = 4 [
    (base.mongoType).mongoType = "Datetime",
    (gorm.field).tag = {type: "DateTime"}
  ];
}
