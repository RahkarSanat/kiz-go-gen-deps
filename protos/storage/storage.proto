syntax = "proto3";

package storage;

import "gorm/gorm.proto";

option (gorm.file_opts).force = true;

option go_package = "./storage";

message ReadObjectRequest {
  string prefix = 1;
  string object = 2;
  string title = 3;
  map<string, string> queries = 4;
}

message WriteObjectRequest {
  FirstMessage first_message = 1;
  ChecksummedData data = 2;
  bool finish_write = 3;
}

message FirstMessage {
  string prefix = 1;
  string name = 2;
  map<string, string> queries = 3;
}

message StatObjectRequest {
  string prefix = 1;
  string name = 2;
  map<string, string> queries = 3;
}

message StatObjectResponse {
  string name = 1;
  map<string, string> metadata = 2;
}

message MetadataOperation {
  string op = 1;
  optional string value = 2;
}

message EditObjectMetadataRequest {
  string name = 1;
  map<string, string> queries = 2;
  map<string, MetadataOperation> metadata = 3;
}

message EditObjectMetadataResponse {
  string name = 1;
  map<string, string> metadata = 2;
}

// Response message for ReadObject.
message ReadObjectResponse {
  FirstMessage first_message = 2;
  // A portion of the data for the object. The service **may** leave `data`
  // empty for any given `ReadResponse`. This enables the service to inform the
  // client that the request is still live while it is running an operation to
  // generate more data.
  ChecksummedData checksummed_data = 1;
}
message WriteObjectResponse {
  // The response will set one of the following.
  oneof write_status {
    // The total number of bytes that have been processed for the given object
    // from all `WriteObject` calls. Only set if the upload has not finalized.
    int64 persisted_size = 1;
  }
}

message ChecksummedData {
  // The data.
  bytes content = 1 [ctype = CORD];

  // If set, the CRC32C digest of the content field.
  optional fixed32 crc32c = 2;
}

message DeleteObjectRequest {
  string bucket = 1;
  string object = 2;
  map<string, string> queries = 3;
}

message DeleteObjectResponse {
  bool status = 1;
}

service Storage {
  option (gorm.server).autogen = false;
  rpc ReadObject(ReadObjectRequest) returns (stream ReadObjectResponse);
  rpc WriteObject(stream WriteObjectRequest) returns (WriteObjectResponse);
  rpc DeleteObject(DeleteObjectRequest) returns (DeleteObjectResponse);
  rpc StatObject(StatObjectRequest) returns (StatObjectResponse);
  rpc EditObjectMetadata(EditObjectMetadataRequest) returns (EditObjectMetadataResponse);
}
