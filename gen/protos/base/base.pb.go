// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: base/base.proto

package base

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_UNSPECIFIED Status = 0
	Status_STATUS_PENDING     Status = 1
	Status_STATUS_APPROAVED   Status = 2
	Status_STATUS_CANCELED    Status = 3
	Status_STATUS_REJECT      Status = 4
	Status_STATUS_EXPIRED     Status = 5
	Status_STATUS_DISABLED    Status = 6
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_PENDING",
		2: "STATUS_APPROAVED",
		3: "STATUS_CANCELED",
		4: "STATUS_REJECT",
		5: "STATUS_EXPIRED",
		6: "STATUS_DISABLED",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_PENDING":     1,
		"STATUS_APPROAVED":   2,
		"STATUS_CANCELED":    3,
		"STATUS_REJECT":      4,
		"STATUS_EXPIRED":     5,
		"STATUS_DISABLED":    6,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_base_base_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_base_base_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{0}
}

type CountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *CountRequest) Reset() {
	*x = CountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRequest) ProtoMessage() {}

func (x *CountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRequest.ProtoReflect.Descriptor instead.
func (*CountRequest) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{0}
}

func (x *CountRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type FindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *FindRequest) Reset() {
	*x = FindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest) ProtoMessage() {}

func (x *FindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest.ProtoReflect.Descriptor instead.
func (*FindRequest) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{1}
}

func (x *FindRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type FindByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filter *Filter `protobuf:"bytes,2,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *FindByIDRequest) Reset() {
	*x = FindByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByIDRequest) ProtoMessage() {}

func (x *FindByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByIDRequest.ProtoReflect.Descriptor instead.
func (*FindByIDRequest) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{2}
}

func (x *FindByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FindByIDRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type CustomFileOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ignore bool   `protobuf:"varint,1,opt,name=ignore,proto3" json:"ignore,omitempty"`
	DbName string `protobuf:"bytes,2,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
}

func (x *CustomFileOptions) Reset() {
	*x = CustomFileOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomFileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomFileOptions) ProtoMessage() {}

func (x *CustomFileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomFileOptions.ProtoReflect.Descriptor instead.
func (*CustomFileOptions) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{3}
}

func (x *CustomFileOptions) GetIgnore() bool {
	if x != nil {
		return x.Ignore
	}
	return false
}

func (x *CustomFileOptions) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

type MongoOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MongoType string `protobuf:"bytes,1,opt,name=mongoType,proto3" json:"mongoType,omitempty"`
}

func (x *MongoOption) Reset() {
	*x = MongoOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MongoOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoOption) ProtoMessage() {}

func (x *MongoOption) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoOption.ProtoReflect.Descriptor instead.
func (*MongoOption) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{4}
}

func (x *MongoOption) GetMongoType() string {
	if x != nil {
		return x.MongoType
	}
	return ""
}

type AggregateOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAggregate bool   `protobuf:"varint,1,opt,name=is_aggregate,json=isAggregate,proto3" json:"is_aggregate,omitempty"`
	Aggregate   string `protobuf:"bytes,2,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
}

func (x *AggregateOption) Reset() {
	*x = AggregateOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggregateOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateOption) ProtoMessage() {}

func (x *AggregateOption) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateOption.ProtoReflect.Descriptor instead.
func (*AggregateOption) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{5}
}

func (x *AggregateOption) GetIsAggregate() bool {
	if x != nil {
		return x.IsAggregate
	}
	return false
}

func (x *AggregateOption) GetAggregate() string {
	if x != nil {
		return x.Aggregate
	}
	return ""
}

type ViewOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsView bool   `protobuf:"varint,1,opt,name=is_view,json=isView,proto3" json:"is_view,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ViewOption) Reset() {
	*x = ViewOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewOption) ProtoMessage() {}

func (x *ViewOption) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewOption.ProtoReflect.Descriptor instead.
func (*ViewOption) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{6}
}

func (x *ViewOption) GetIsView() bool {
	if x != nil {
		return x.IsView
	}
	return false
}

func (x *ViewOption) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MongoMessageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShouldValidate bool `protobuf:"varint,1,opt,name=should_validate,json=shouldValidate,proto3" json:"should_validate,omitempty"`
}

func (x *MongoMessageOptions) Reset() {
	*x = MongoMessageOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MongoMessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoMessageOptions) ProtoMessage() {}

func (x *MongoMessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoMessageOptions.ProtoReflect.Descriptor instead.
func (*MongoMessageOptions) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{7}
}

func (x *MongoMessageOptions) GetShouldValidate() bool {
	if x != nil {
		return x.ShouldValidate
	}
	return false
}

type AclOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sub string `protobuf:"bytes,1,opt,name=Sub,proto3" json:"Sub,omitempty"`
	Obj string `protobuf:"bytes,2,opt,name=Obj,proto3" json:"Obj,omitempty"`
	Act string `protobuf:"bytes,3,opt,name=Act,proto3" json:"Act,omitempty"`
}

func (x *AclOption) Reset() {
	*x = AclOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AclOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclOption) ProtoMessage() {}

func (x *AclOption) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclOption.ProtoReflect.Descriptor instead.
func (*AclOption) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{8}
}

func (x *AclOption) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *AclOption) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *AclOption) GetAct() string {
	if x != nil {
		return x.Act
	}
	return ""
}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,opt,name=key,proto3,oneof" json:"key,omitempty"`
	Value *int32  `protobuf:"varint,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{9}
}

func (x *Sort) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *Sort) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit *int32  `protobuf:"varint,1,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Skip  *int64  `protobuf:"varint,2,opt,name=skip,proto3,oneof" json:"skip,omitempty"`
	Sort  []*Sort `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{10}
}

func (x *Pagination) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *Pagination) GetSkip() int64 {
	if x != nil && x.Skip != nil {
		return *x.Skip
	}
	return 0
}

func (x *Pagination) GetSort() []*Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination      *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Projection      *string     `protobuf:"bytes,2,opt,name=projection,proto3,oneof" json:"projection,omitempty"`
	Query           *string     `protobuf:"bytes,3,opt,name=query,proto3,oneof" json:"query,omitempty"`
	ExcludeOwn      *bool       `protobuf:"varint,4,opt,name=exclude_own,json=excludeOwn,proto3,oneof" json:"exclude_own,omitempty"`
	ExcludeZone     *bool       `protobuf:"varint,5,opt,name=exclude_zone,json=excludeZone,proto3,oneof" json:"exclude_zone,omitempty"`
	ExcludeShare    *bool       `protobuf:"varint,6,opt,name=exclude_share,json=excludeShare,proto3,oneof" json:"exclude_share,omitempty"`
	ExcludeRelatoin *bool       `protobuf:"varint,7,opt,name=exclude_relatoin,json=excludeRelatoin,proto3,oneof" json:"exclude_relatoin,omitempty"`
	IsTrash         *bool       `protobuf:"varint,8,opt,name=is_trash,json=isTrash,proto3,oneof" json:"is_trash,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{11}
}

func (x *Filter) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *Filter) GetProjection() string {
	if x != nil && x.Projection != nil {
		return *x.Projection
	}
	return ""
}

func (x *Filter) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *Filter) GetExcludeOwn() bool {
	if x != nil && x.ExcludeOwn != nil {
		return *x.ExcludeOwn
	}
	return false
}

func (x *Filter) GetExcludeZone() bool {
	if x != nil && x.ExcludeZone != nil {
		return *x.ExcludeZone
	}
	return false
}

func (x *Filter) GetExcludeShare() bool {
	if x != nil && x.ExcludeShare != nil {
		return *x.ExcludeShare
	}
	return false
}

func (x *Filter) GetExcludeRelatoin() bool {
	if x != nil && x.ExcludeRelatoin != nil {
		return *x.ExcludeRelatoin
	}
	return false
}

func (x *Filter) GetIsTrash() bool {
	if x != nil && x.IsTrash != nil {
		return *x.IsTrash
	}
	return false
}

type Operations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddToSet    *string `protobuf:"bytes,1,opt,name=addToSet,proto3,oneof" json:"addToSet,omitempty"`
	Bit         *string `protobuf:"bytes,2,opt,name=bit,proto3,oneof" json:"bit,omitempty"`
	CurrentDate *string `protobuf:"bytes,3,opt,name=currentDate,proto3,oneof" json:"currentDate,omitempty"`
	Inc         *string `protobuf:"bytes,4,opt,name=inc,proto3,oneof" json:"inc,omitempty"`
	Max         *string `protobuf:"bytes,5,opt,name=max,proto3,oneof" json:"max,omitempty"`
	Min         *string `protobuf:"bytes,6,opt,name=min,proto3,oneof" json:"min,omitempty"`
	Mul         *string `protobuf:"bytes,7,opt,name=mul,proto3,oneof" json:"mul,omitempty"`
	Pop         *string `protobuf:"bytes,8,opt,name=pop,proto3,oneof" json:"pop,omitempty"`
	Pull        *string `protobuf:"bytes,9,opt,name=pull,proto3,oneof" json:"pull,omitempty"`
	PullAll     *string `protobuf:"bytes,10,opt,name=pullAll,proto3,oneof" json:"pullAll,omitempty"`
	Push        *string `protobuf:"bytes,11,opt,name=push,proto3,oneof" json:"push,omitempty"`
	Rename      *string `protobuf:"bytes,12,opt,name=rename,proto3,oneof" json:"rename,omitempty"`
	Set         *string `protobuf:"bytes,13,opt,name=set,proto3,oneof" json:"set,omitempty"`
	SetOnInsert *string `protobuf:"bytes,14,opt,name=setOnInsert,proto3,oneof" json:"setOnInsert,omitempty"`
	Unset       *string `protobuf:"bytes,15,opt,name=unset,proto3,oneof" json:"unset,omitempty"`
}

func (x *Operations) Reset() {
	*x = Operations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operations) ProtoMessage() {}

func (x *Operations) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operations.ProtoReflect.Descriptor instead.
func (*Operations) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{12}
}

func (x *Operations) GetAddToSet() string {
	if x != nil && x.AddToSet != nil {
		return *x.AddToSet
	}
	return ""
}

func (x *Operations) GetBit() string {
	if x != nil && x.Bit != nil {
		return *x.Bit
	}
	return ""
}

func (x *Operations) GetCurrentDate() string {
	if x != nil && x.CurrentDate != nil {
		return *x.CurrentDate
	}
	return ""
}

func (x *Operations) GetInc() string {
	if x != nil && x.Inc != nil {
		return *x.Inc
	}
	return ""
}

func (x *Operations) GetMax() string {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return ""
}

func (x *Operations) GetMin() string {
	if x != nil && x.Min != nil {
		return *x.Min
	}
	return ""
}

func (x *Operations) GetMul() string {
	if x != nil && x.Mul != nil {
		return *x.Mul
	}
	return ""
}

func (x *Operations) GetPop() string {
	if x != nil && x.Pop != nil {
		return *x.Pop
	}
	return ""
}

func (x *Operations) GetPull() string {
	if x != nil && x.Pull != nil {
		return *x.Pull
	}
	return ""
}

func (x *Operations) GetPullAll() string {
	if x != nil && x.PullAll != nil {
		return *x.PullAll
	}
	return ""
}

func (x *Operations) GetPush() string {
	if x != nil && x.Push != nil {
		return *x.Push
	}
	return ""
}

func (x *Operations) GetRename() string {
	if x != nil && x.Rename != nil {
		return *x.Rename
	}
	return ""
}

func (x *Operations) GetSet() string {
	if x != nil && x.Set != nil {
		return *x.Set
	}
	return ""
}

func (x *Operations) GetSetOnInsert() string {
	if x != nil && x.SetOnInsert != nil {
		return *x.SetOnInsert
	}
	return ""
}

func (x *Operations) GetUnset() string {
	if x != nil && x.Unset != nil {
		return *x.Unset
	}
	return ""
}

type Total struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count *int64 `protobuf:"varint,1,opt,name=count,proto3,oneof" json:"count,omitempty"`
}

func (x *Total) Reset() {
	*x = Total{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Total) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Total) ProtoMessage() {}

func (x *Total) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Total.ProtoReflect.Descriptor instead.
func (*Total) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{13}
}

func (x *Total) GetCount() int64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type BaseAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	Owner      string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Zones      []string `protobuf:"bytes,2,rep,name=zones,proto3" json:"zones,omitempty"`
	Clients    []string `protobuf:"bytes,3,rep,name=clients,proto3" json:"clients,omitempty"`
	Shares     []string `protobuf:"bytes,4,rep,name=shares,proto3" json:"shares,omitempty"`
	Relations  []string `protobuf:"bytes,5,rep,name=relations,proto3" json:"relations,omitempty"`
	CreatedBy  *string  `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3,oneof" json:"created_by,omitempty"`
	UpdatedBy  *string  `protobuf:"bytes,7,opt,name=updated_by,json=updatedBy,proto3,oneof" json:"updated_by,omitempty"`
	DeletedBy  *string  `protobuf:"bytes,8,opt,name=deleted_by,json=deletedBy,proto3,oneof" json:"deleted_by,omitempty"`
	RestoredBy *string  `protobuf:"bytes,9,opt,name=restored_by,json=restoredBy,proto3,oneof" json:"restored_by,omitempty"`
}

func (x *BaseAccess) Reset() {
	*x = BaseAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseAccess) ProtoMessage() {}

func (x *BaseAccess) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseAccess.ProtoReflect.Descriptor instead.
func (*BaseAccess) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{14}
}

func (x *BaseAccess) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseAccess) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *BaseAccess) GetZones() []string {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *BaseAccess) GetClients() []string {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *BaseAccess) GetShares() []string {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *BaseAccess) GetRelations() []string {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *BaseAccess) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

func (x *BaseAccess) GetUpdatedBy() string {
	if x != nil && x.UpdatedBy != nil {
		return *x.UpdatedBy
	}
	return ""
}

func (x *BaseAccess) GetDeletedBy() string {
	if x != nil && x.DeletedBy != nil {
		return *x.DeletedBy
	}
	return ""
}

func (x *BaseAccess) GetRestoredBy() string {
	if x != nil && x.RestoredBy != nil {
		return *x.RestoredBy
	}
	return ""
}

type BaseProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	CreatedIn  *string  `protobuf:"bytes,1,opt,name=created_in,json=createdIn,proto3,oneof" json:"created_in,omitempty"`
	UpdatedIn  *string  `protobuf:"bytes,2,opt,name=updated_in,json=updatedIn,proto3,oneof" json:"updated_in,omitempty"`
	DeletedIn  *string  `protobuf:"bytes,3,opt,name=deleted_in,json=deletedIn,proto3,oneof" json:"deleted_in,omitempty"`
	RestoredIn *string  `protobuf:"bytes,4,opt,name=restored_in,json=restoredIn,proto3,oneof" json:"restored_in,omitempty"`
	Tags       []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Version    *string  `protobuf:"bytes,6,opt,name=version,proto3,oneof" json:"version,omitempty"`
}

func (x *BaseProperties) Reset() {
	*x = BaseProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseProperties) ProtoMessage() {}

func (x *BaseProperties) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseProperties.ProtoReflect.Descriptor instead.
func (*BaseProperties) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{15}
}

func (x *BaseProperties) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseProperties) GetCreatedIn() string {
	if x != nil && x.CreatedIn != nil {
		return *x.CreatedIn
	}
	return ""
}

func (x *BaseProperties) GetUpdatedIn() string {
	if x != nil && x.UpdatedIn != nil {
		return *x.UpdatedIn
	}
	return ""
}

func (x *BaseProperties) GetDeletedIn() string {
	if x != nil && x.DeletedIn != nil {
		return *x.DeletedIn
	}
	return ""
}

func (x *BaseProperties) GetRestoredIn() string {
	if x != nil && x.RestoredIn != nil {
		return *x.RestoredIn
	}
	return ""
}

func (x *BaseProperties) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BaseProperties) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

type BaseDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt  *string `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt  *string `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	DeletedAt  *string `protobuf:"bytes,3,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	RestoredAt *string `protobuf:"bytes,4,opt,name=restored_at,json=restoredAt,proto3,oneof" json:"restored_at,omitempty"`
}

func (x *BaseDates) Reset() {
	*x = BaseDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseDates) ProtoMessage() {}

func (x *BaseDates) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseDates.ProtoReflect.Descriptor instead.
func (*BaseDates) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{16}
}

func (x *BaseDates) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BaseDates) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *BaseDates) GetUpdatedAt() string {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return ""
}

func (x *BaseDates) GetDeletedAt() string {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return ""
}

func (x *BaseDates) GetRestoredAt() string {
	if x != nil && x.RestoredAt != nil {
		return *x.RestoredAt
	}
	return ""
}

type BaseAccessUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner     *string  `protobuf:"bytes,1,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	Zones     []string `protobuf:"bytes,2,rep,name=zones,proto3" json:"zones,omitempty"`
	Shares    []string `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	Relations []string `protobuf:"bytes,4,rep,name=relations,proto3" json:"relations,omitempty"`
}

func (x *BaseAccessUpdate) Reset() {
	*x = BaseAccessUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseAccessUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseAccessUpdate) ProtoMessage() {}

func (x *BaseAccessUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseAccessUpdate.ProtoReflect.Descriptor instead.
func (*BaseAccessUpdate) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{17}
}

func (x *BaseAccessUpdate) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *BaseAccessUpdate) GetZones() []string {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *BaseAccessUpdate) GetShares() []string {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *BaseAccessUpdate) GetRelations() []string {
	if x != nil {
		return x.Relations
	}
	return nil
}

type BasePropertiesUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *BasePropertiesUpdate) Reset() {
	*x = BasePropertiesUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasePropertiesUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasePropertiesUpdate) ProtoMessage() {}

func (x *BasePropertiesUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasePropertiesUpdate.ProtoReflect.Descriptor instead.
func (*BasePropertiesUpdate) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{18}
}

func (x *BasePropertiesUpdate) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type BaseDatesUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BaseDatesUpdate) Reset() {
	*x = BaseDatesUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseDatesUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseDatesUpdate) ProtoMessage() {}

func (x *BaseDatesUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseDatesUpdate.ProtoReflect.Descriptor instead.
func (*BaseDatesUpdate) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{19}
}

type BaseAccessRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner      *string  `protobuf:"bytes,1,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	Zones      []string `protobuf:"bytes,2,rep,name=zones,proto3" json:"zones,omitempty"`
	Clients    []string `protobuf:"bytes,3,rep,name=clients,proto3" json:"clients,omitempty"`
	Shares     []string `protobuf:"bytes,4,rep,name=shares,proto3" json:"shares,omitempty"`
	Relations  []string `protobuf:"bytes,5,rep,name=relations,proto3" json:"relations,omitempty"`
	CreatedBy  *string  `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3,oneof" json:"created_by,omitempty"`
	UpdatedBy  *string  `protobuf:"bytes,7,opt,name=updated_by,json=updatedBy,proto3,oneof" json:"updated_by,omitempty"`
	DeletedBy  *string  `protobuf:"bytes,8,opt,name=deleted_by,json=deletedBy,proto3,oneof" json:"deleted_by,omitempty"`
	RestoredBy *string  `protobuf:"bytes,9,opt,name=restored_by,json=restoredBy,proto3,oneof" json:"restored_by,omitempty"`
}

func (x *BaseAccessRead) Reset() {
	*x = BaseAccessRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseAccessRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseAccessRead) ProtoMessage() {}

func (x *BaseAccessRead) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseAccessRead.ProtoReflect.Descriptor instead.
func (*BaseAccessRead) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{20}
}

func (x *BaseAccessRead) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *BaseAccessRead) GetZones() []string {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *BaseAccessRead) GetClients() []string {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *BaseAccessRead) GetShares() []string {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *BaseAccessRead) GetRelations() []string {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *BaseAccessRead) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

func (x *BaseAccessRead) GetUpdatedBy() string {
	if x != nil && x.UpdatedBy != nil {
		return *x.UpdatedBy
	}
	return ""
}

func (x *BaseAccessRead) GetDeletedBy() string {
	if x != nil && x.DeletedBy != nil {
		return *x.DeletedBy
	}
	return ""
}

func (x *BaseAccessRead) GetRestoredBy() string {
	if x != nil && x.RestoredBy != nil {
		return *x.RestoredBy
	}
	return ""
}

type BasePropertiesRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedIn  *string  `protobuf:"bytes,1,opt,name=created_in,json=createdIn,proto3,oneof" json:"created_in,omitempty"`
	UpdatedIn  *string  `protobuf:"bytes,2,opt,name=updated_in,json=updatedIn,proto3,oneof" json:"updated_in,omitempty"`
	DeletedIn  *string  `protobuf:"bytes,3,opt,name=deleted_in,json=deletedIn,proto3,oneof" json:"deleted_in,omitempty"`
	RestoredIn *string  `protobuf:"bytes,4,opt,name=restored_in,json=restoredIn,proto3,oneof" json:"restored_in,omitempty"`
	Tags       []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Version    *string  `protobuf:"bytes,6,opt,name=version,proto3,oneof" json:"version,omitempty"`
}

func (x *BasePropertiesRead) Reset() {
	*x = BasePropertiesRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasePropertiesRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasePropertiesRead) ProtoMessage() {}

func (x *BasePropertiesRead) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasePropertiesRead.ProtoReflect.Descriptor instead.
func (*BasePropertiesRead) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{21}
}

func (x *BasePropertiesRead) GetCreatedIn() string {
	if x != nil && x.CreatedIn != nil {
		return *x.CreatedIn
	}
	return ""
}

func (x *BasePropertiesRead) GetUpdatedIn() string {
	if x != nil && x.UpdatedIn != nil {
		return *x.UpdatedIn
	}
	return ""
}

func (x *BasePropertiesRead) GetDeletedIn() string {
	if x != nil && x.DeletedIn != nil {
		return *x.DeletedIn
	}
	return ""
}

func (x *BasePropertiesRead) GetRestoredIn() string {
	if x != nil && x.RestoredIn != nil {
		return *x.RestoredIn
	}
	return ""
}

func (x *BasePropertiesRead) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BasePropertiesRead) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

type BaseDatesRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt  *string `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt  *string `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	DeletedAt  *string `protobuf:"bytes,3,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	RestoredAt *string `protobuf:"bytes,4,opt,name=restored_at,json=restoredAt,proto3,oneof" json:"restored_at,omitempty"`
}

func (x *BaseDatesRead) Reset() {
	*x = BaseDatesRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_base_base_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseDatesRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseDatesRead) ProtoMessage() {}

func (x *BaseDatesRead) ProtoReflect() protoreflect.Message {
	mi := &file_base_base_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseDatesRead.ProtoReflect.Descriptor instead.
func (*BaseDatesRead) Descriptor() ([]byte, []int) {
	return file_base_base_proto_rawDescGZIP(), []int{22}
}

func (x *BaseDatesRead) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *BaseDatesRead) GetUpdatedAt() string {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return ""
}

func (x *BaseDatesRead) GetDeletedAt() string {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return ""
}

func (x *BaseDatesRead) GetRestoredAt() string {
	if x != nil && x.RestoredAt != nil {
		return *x.RestoredAt
	}
	return ""
}

var file_base_base_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*CustomFileOptions)(nil),
		Field:         10001,
		Name:          "base.fileOps",
		Tag:           "bytes,10001,opt,name=fileOps",
		Filename:      "base/base.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*MongoOption)(nil),
		Field:         10001,
		Name:          "base.mongoType",
		Tag:           "bytes,10001,opt,name=mongoType",
		Filename:      "base/base.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*MongoMessageOptions)(nil),
		Field:         52120,
		Name:          "base.mongoOpts",
		Tag:           "bytes,52120,opt,name=mongoOpts",
		Filename:      "base/base.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*AclOption)(nil),
		Field:         10001,
		Name:          "base.acl",
		Tag:           "bytes,10001,opt,name=acl",
		Filename:      "base/base.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*AggregateOption)(nil),
		Field:         10002,
		Name:          "base.agropt",
		Tag:           "bytes,10002,opt,name=agropt",
		Filename:      "base/base.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*ViewOption)(nil),
		Field:         10003,
		Name:          "base.view",
		Tag:           "bytes,10003,opt,name=view",
		Filename:      "base/base.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional base.CustomFileOptions fileOps = 10001;
	E_FileOps = &file_base_base_proto_extTypes[0]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional base.MongoOption mongoType = 10001;
	E_MongoType = &file_base_base_proto_extTypes[1]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional base.MongoMessageOptions mongoOpts = 52120;
	E_MongoOpts = &file_base_base_proto_extTypes[2]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional base.AclOption acl = 10001;
	E_Acl = &file_base_base_proto_extTypes[3]
	// optional base.AggregateOption agropt = 10002;
	E_Agropt = &file_base_base_proto_extTypes[4]
	// optional base.ViewOption view = 10003;
	E_View = &file_base_base_proto_extTypes[5]
)

var File_base_base_proto protoreflect.FileDescriptor

var file_base_base_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x67,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x0c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x43, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x22, 0x5c, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x22, 0x44, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0b, 0x4d, 0x6f, 0x6e, 0x67,
	0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x67,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x0f, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x0a, 0x56, 0x69, 0x65,
	0x77, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x13, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x09, 0x41, 0x63, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x53, 0x75, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x4f, 0x62, 0x6a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4f, 0x62, 0x6a, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x41, 0x63, 0x74, 0x22, 0x4a, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x15, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x73, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x73, 0x6b, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x04, 0x73, 0x6b,
	0x69, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x22, 0xc4, 0x03, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x03, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4f, 0x77, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x26, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x0b, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x05, 0x52, 0x0c, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x6f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x0f,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x6f, 0x69, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x73, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x07, 0x69, 0x73, 0x54, 0x72, 0x61, 0x73, 0x68, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6f, 0x77, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x6f,
	0x69, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x73, 0x68, 0x22,
	0xbd, 0x04, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x08, 0x61, 0x64, 0x64, 0x54, 0x6f, 0x53, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x61, 0x64, 0x64, 0x54, 0x6f, 0x53, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x62, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03,
	0x62, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a,
	0x03, 0x69, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x03, 0x69, 0x6e,
	0x63, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d,
	0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6d, 0x75, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x06, 0x52, 0x03, 0x6d, 0x75, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x70, 0x6f, 0x70,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x03, 0x70, 0x6f, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x70, 0x75, 0x6c, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08,
	0x52, 0x04, 0x70, 0x75, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x75, 0x6c,
	0x6c, 0x41, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x07, 0x70, 0x75,
	0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x75, 0x73, 0x68,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x04, 0x70, 0x75, 0x73, 0x68, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0b, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15,
	0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x03, 0x73,
	0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x4f, 0x6e, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0b, 0x73, 0x65,
	0x74, 0x4f, 0x6e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x05, 0x75,
	0x6e, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x61, 0x64, 0x64, 0x54,
	0x6f, 0x53, 0x65, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x62, 0x69, 0x74, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x69, 0x6e, 0x63, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x6d, 0x69, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x75, 0x6c, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x70, 0x6f, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x41, 0x6c, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x75,
	0x73, 0x68, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x73, 0x65, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x74, 0x4f, 0x6e, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x22,
	0x2c, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc9, 0x03,
	0x0a, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08,
	0x12, 0x04, 0x55, 0x55, 0x49, 0x44, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a,
	0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x01, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e,
	0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x02,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x34,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x48, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x42,
	0x79, 0x88, 0x01, 0x01, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x22, 0x86, 0x03, 0x0a, 0x0e, 0x42, 0x61,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0xb9, 0x19, 0x0a, 0x0a, 0x08,
	0x12, 0x04, 0x55, 0x55, 0x49, 0x44, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x32, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x48, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x02, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a,
	0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x03, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x82, 0x03, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0xb9,
	0x19, 0x0a, 0x0a, 0x08, 0x12, 0x04, 0x55, 0x55, 0x49, 0x44, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x42, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x12, 0x08, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08,
	0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x12, 0x08,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x8a, 0xf1,
	0x04, 0x0a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0xba, 0xb9, 0x19, 0x0c,
	0x0a, 0x0a, 0x12, 0x08, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x02, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x12, 0x08, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x48, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x73, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x2a, 0x0a,
	0x14, 0x42, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x42, 0x61, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xaa, 0x03, 0x0a,
	0x0e, 0x42, 0x61, 0x73, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x19, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6f,
	0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x7a, 0x6f, 0x6e, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x32, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x48, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x02, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1,
	0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x03, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x48, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x42, 0x79, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x22, 0xe2, 0x02, 0x0a, 0x12, 0x42, 0x61,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x32, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x44, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x8a, 0xf1,
	0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x48, 0x02, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x48, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f,
	0x69, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xde,
	0x02, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x42, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x12, 0x08, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08,
	0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x12, 0x08,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x01, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x8a, 0xf1,
	0x04, 0x0a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0xba, 0xb9, 0x19, 0x0c,
	0x0a, 0x0a, 0x12, 0x08, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x02, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1e, 0x8a, 0xf1, 0x04, 0x0a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0xba, 0xb9, 0x19, 0x0c, 0x0a, 0x0a, 0x12, 0x08, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x48, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x2a,
	0x9b, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x41, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45,
	0x43, 0x54, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x3a, 0x50, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x73, 0x3a,
	0x4f, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x91, 0x4e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x3a, 0x5a, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x1f, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x98,
	0x97, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x6e, 0x67, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x4f, 0x70, 0x74, 0x73, 0x3a, 0x42, 0x0a, 0x03,
	0x61, 0x63, 0x6c, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x91, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x41, 0x63, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x61, 0x63, 0x6c,
	0x3a, 0x4e, 0x0a, 0x06, 0x61, 0x67, 0x72, 0x6f, 0x70, 0x74, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x92, 0x4e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x67, 0x72, 0x6f, 0x70, 0x74,
	0x3a, 0x45, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x93, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x52, 0x61, 0x68, 0x6b, 0x61, 0x72, 0x53, 0x61, 0x6e, 0x61,
	0x74, 0x2f, 0x6b, 0x69, 0x7a, 0x2d, 0x67, 0x6f, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x64, 0x65, 0x70,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_base_base_proto_rawDescOnce sync.Once
	file_base_base_proto_rawDescData = file_base_base_proto_rawDesc
)

func file_base_base_proto_rawDescGZIP() []byte {
	file_base_base_proto_rawDescOnce.Do(func() {
		file_base_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_base_proto_rawDescData)
	})
	return file_base_base_proto_rawDescData
}

var file_base_base_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_base_base_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_base_base_proto_goTypes = []interface{}{
	(Status)(0),                         // 0: base.Status
	(*CountRequest)(nil),                // 1: base.CountRequest
	(*FindRequest)(nil),                 // 2: base.FindRequest
	(*FindByIDRequest)(nil),             // 3: base.FindByIDRequest
	(*CustomFileOptions)(nil),           // 4: base.CustomFileOptions
	(*MongoOption)(nil),                 // 5: base.MongoOption
	(*AggregateOption)(nil),             // 6: base.AggregateOption
	(*ViewOption)(nil),                  // 7: base.ViewOption
	(*MongoMessageOptions)(nil),         // 8: base.MongoMessageOptions
	(*AclOption)(nil),                   // 9: base.AclOption
	(*Sort)(nil),                        // 10: base.Sort
	(*Pagination)(nil),                  // 11: base.Pagination
	(*Filter)(nil),                      // 12: base.Filter
	(*Operations)(nil),                  // 13: base.Operations
	(*Total)(nil),                       // 14: base.Total
	(*BaseAccess)(nil),                  // 15: base.BaseAccess
	(*BaseProperties)(nil),              // 16: base.BaseProperties
	(*BaseDates)(nil),                   // 17: base.BaseDates
	(*BaseAccessUpdate)(nil),            // 18: base.BaseAccessUpdate
	(*BasePropertiesUpdate)(nil),        // 19: base.BasePropertiesUpdate
	(*BaseDatesUpdate)(nil),             // 20: base.BaseDatesUpdate
	(*BaseAccessRead)(nil),              // 21: base.BaseAccessRead
	(*BasePropertiesRead)(nil),          // 22: base.BasePropertiesRead
	(*BaseDatesRead)(nil),               // 23: base.BaseDatesRead
	(*descriptorpb.FileOptions)(nil),    // 24: google.protobuf.FileOptions
	(*descriptorpb.FieldOptions)(nil),   // 25: google.protobuf.FieldOptions
	(*descriptorpb.MessageOptions)(nil), // 26: google.protobuf.MessageOptions
	(*descriptorpb.MethodOptions)(nil),  // 27: google.protobuf.MethodOptions
}
var file_base_base_proto_depIdxs = []int32{
	12, // 0: base.CountRequest.filter:type_name -> base.Filter
	12, // 1: base.FindRequest.filter:type_name -> base.Filter
	12, // 2: base.FindByIDRequest.filter:type_name -> base.Filter
	10, // 3: base.Pagination.sort:type_name -> base.Sort
	11, // 4: base.Filter.pagination:type_name -> base.Pagination
	24, // 5: base.fileOps:extendee -> google.protobuf.FileOptions
	25, // 6: base.mongoType:extendee -> google.protobuf.FieldOptions
	26, // 7: base.mongoOpts:extendee -> google.protobuf.MessageOptions
	27, // 8: base.acl:extendee -> google.protobuf.MethodOptions
	27, // 9: base.agropt:extendee -> google.protobuf.MethodOptions
	27, // 10: base.view:extendee -> google.protobuf.MethodOptions
	4,  // 11: base.fileOps:type_name -> base.CustomFileOptions
	5,  // 12: base.mongoType:type_name -> base.MongoOption
	8,  // 13: base.mongoOpts:type_name -> base.MongoMessageOptions
	9,  // 14: base.acl:type_name -> base.AclOption
	6,  // 15: base.agropt:type_name -> base.AggregateOption
	7,  // 16: base.view:type_name -> base.ViewOption
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	11, // [11:17] is the sub-list for extension type_name
	5,  // [5:11] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_base_base_proto_init() }
func file_base_base_proto_init() {
	if File_base_base_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_base_base_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomFileOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MongoOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggregateOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MongoMessageOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AclOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Total); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseAccessUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasePropertiesUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseDatesUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseAccessRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasePropertiesRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_base_base_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseDatesRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_base_base_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_base_base_proto_msgTypes[22].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_base_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 6,
			NumServices:   0,
		},
		GoTypes:           file_base_base_proto_goTypes,
		DependencyIndexes: file_base_base_proto_depIdxs,
		EnumInfos:         file_base_base_proto_enumTypes,
		MessageInfos:      file_base_base_proto_msgTypes,
		ExtensionInfos:    file_base_base_proto_extTypes,
	}.Build()
	File_base_base_proto = out.File
	file_base_base_proto_rawDesc = nil
	file_base_base_proto_goTypes = nil
	file_base_base_proto_depIdxs = nil
}
